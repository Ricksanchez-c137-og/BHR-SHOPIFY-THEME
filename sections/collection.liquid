{% paginate collection.products by 4 %}
    <section class="collection-sec">
      <div class="sort-section">
        <label for="sort-by" class="sort-label">Sort by:</label>
        <select id="sort-by" class="sort-dropdown">
          {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
  
          {% for option in collection.sort_options %}
            <option
              value="{{ option.value }}"
              {% if option.value == sort_by %}
                selected="selected"
              {% endif %}
            >
              {{ option.name }}
            </option>
          {% endfor %}
        </select>
      </div>
  
      <div class="collection-details">
        <h1>{{ collection.title }}</h1>
        <p>{{ collection.description }}</p>
        <div class="products-grid">
          {% for product in collection.products %}
            <div class="product-card">
              <img
                class="product-image"
                width="300"
                height="300"
                loading="lazy"
                src="{{ product.featured_image | image_url }}"
                alt="{{ product.title }}"
              >
              <h3>{{ product.title | link_to: product.url }}</h3>
              <p class="product-price">{{ product.price | money }}</p>
            </div>
          {% endfor %}
        </div>
      </div>
  
      <div class="pagination">
        {{ paginate | default_pagination }}
      </div>
    </section>
  {% endpaginate %}
  
  <style>
    .collection-sec {
      background: {{ section.settings.background }};
      color: {{ section.settings.text_color }};
      padding: 20px;
      font-family: Arial, sans-serif;
    }
  
    .sort-section {
      margin-bottom: 20px;
      text-align: right;
    }
  
    .sort-label {
      font-weight: bold;
      margin-right: 10px;
    }
  
    .sort-dropdown {
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 14px;
    }
  
    .collection-details {
      text-align: center;
      margin-bottom: 20px;
    }
  
    .products-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }
  
    .product-card {
      background: #fff;
      border: 1px solid #ddd;
      border-radius: 10px;
      padding: 15px;
      text-align: center;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
  
    .product-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }
  
    .product-image {
      max-width: 100%;
      height: auto;
      border-radius: 5px;
      margin-bottom: 10px;
    }
  
    .product-price {
      font-weight: bold;
      margin-top: 5px;
      color: #007acc;
    }
  
    .pagination {
      margin-top: 20px;
      text-align: center;
    }
  
    .pagination a {
      padding: 8px 12px;
      margin: 0 5px;
      background: #007acc;
      color: #fff;
      border-radius: 5px;
      text-decoration: none;
      font-size: 14px;
      transition: background-color 0.3s ease;
    }
  
    .pagination a:hover {
      background: #005f99;
    }
  
    @media (max-width: 768px) {
      .sort-section {
        text-align: center;
      }
    }
  </style>
  
  <script>
    Shopify.queryParams = {};
  
    // Preserve existing query parameters
    if (location.search.length) {
      var params = location.search.substr(1).split('&');
  
      for (var i = 0; i < params.length; i++) {
        var keyValue = params[i].split('=');
  
        if (keyValue.length) {
          Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
        }
      }
    }
  
    // Update sort_by query parameter on select change
    document.querySelector('#sort-by').addEventListener('change', function (e) {
      var value = e.target.value;
  
      Shopify.queryParams.sort_by = value;
      location.search = new URLSearchParams(Shopify.queryParams).toString();
    });
  </script>
  
  {% schema %}
  {
    "name": "Collection",
    "settings": [
      {
        "type": "color",
        "id": "background",
        "label": "Background Color",
        "default": "#f9f9f9"
      },
      {
        "type": "color",
        "id": "text_color",
        "label": "Text Color",
        "default": "#000000"
      },
      {
        "type": "font_picker",
        "id": "font",
        "label": "Font Style",
        "default": "Arial"
      },
      {
        "type": "number",
        "id": "products_per_row",
        "label": "Products per Row",
        "default": 3
      }
    ],
    "presets": [
      {
        "name": "Default Collection"
      }
    ]
  }
  {% endschema %}
  